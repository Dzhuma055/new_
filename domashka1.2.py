#                                   Chapter 1.2
#
#               1. Дан список a = [1, 2, 2, 4, 11, 2, 3, 1]. Напишите код, который выведет
#               список a без дубликатов.

# a = [1, 2, 2, 4, 11, 2, 3, 1]
# # a.sort()
# print(list(set(a)))


#                2. Дан список a = [‘John’, ‘Anna’, ‘Raychel’, ‘Katarina’, ‘Marko’, ‘Tom’]
#                   Удалите из списка 0, 4 и 5 элементы списка.

# a = ['John', 'Anna', 'Raychel', 'Katarina', 'Marko', 'Tom']
# a.remove('John'), a.remove('Marko'), a.remove('Tom')
# print(a)


#               3. Дан список [1, 2, 3, 4, 5, 6, 7, 8, 9]. Отсортируйте его в обратном
#                  порядке.
# a = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# a.reverse()
# print(a)

#               4. Измените один элемент списка с любым значением на новое.
# a = ['John', 'Anna', 'Raychel', 'Katerina', 'Marko']
# a.remove('Marko')
# a.append('Dzhuma')
# print(a)


# 5. Попросить пользователя ввести слова через пробел. Отсортировать
#  слова по количеству символов и вывести на экран результат.


# print(''


#               6. Напишите код для проверки существует ли ключ в dict.
# a = [['Moskva', 495,], ['piter', 812], ['penza', 8412]]
# # 'Moskva'-495,
# # 'Piter'-812,
# # 'Penza'8412
# d = {
#     # key:value
#     'Moskva': 495,
#     'Piter': 812,
#     'Penza': 8412
# }
# r = dict(moskva=495, piter=812, penza=8412)
# t = dict(a)
# q = dict.fromkeys(['a', 'b', 'c'],100)
# v = {}
# print(v, type(v)
#
                # 7. Напишите программу для объединения двух словарей в один.
                
# a = {1: "один ", 2: "два", 3: "три"}
# b = {4: "четыре", 5: "пять"}
# a.update(b)
# print(a)
# print('Вышел зайчик погулять)')


#                8. Напишите программу для сортировки dict по ключам.





